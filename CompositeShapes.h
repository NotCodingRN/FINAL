#pragma once
#include "Basicshapes.h"


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Sign :public shape
{
	Rect* base;
	Rect* top;
public:
	Sign(game* r_pGame, point ref);
	virtual ~Sign();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Tree :public shape
{
	Rect* base;
	Tria* top;
	Tria* top2;
	circle* bell;

public:
	Tree(game* r_pGame, point ref);
	virtual ~Tree();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class House :public shape
{
	Rect* base;
	Tria* top;
public:
	House(game* r_pGame, point ref);
	virtual ~House();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class bfly :public shape
{
	Rect* bflybod;
	circle* wing11;
	circle* wing12;
	circle* wing21;
	circle* wing22;
	Tria* feeler1; Tria* feeler2;

public:
	bfly(game* r_pGame, point ref);
	virtual ~bfly();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class truck :public shape
{
	Rect* base;
	circle* wheel1;
	circle* wheel2;
	Rect* windoww;
	Tria* spoiler;

public:
	truck(game* r_pGame, point ref);
	virtual ~truck();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class icy :public shape
{

	Tria* cone;
	circle* ball;
public:
	icy(game* r_pGame, point ref);
	virtual ~icy();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class rckt :public shape
{
	Rect* base;
	Tria* top;
	Tria* low;
	circle* ball1;
	circle* ball2;
public:
	rckt(game* r_pGame, point ref);
	virtual ~rckt();
	virtual void draw() const override;
	virtual void resize(double size) override;
	virtual void rotate(int AddONAngle) override;
	virtual void move(point dir) override;
	int getType();
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////